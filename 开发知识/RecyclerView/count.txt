LinearLayoutManager中（实际继承自RecyclerView.LayoutManager的方法）：
	1、android.support.v7.widget.RecyclerView.LayoutManager#getItemCount
	getItemCount：当前RecyclerView的所有子项个数
	
	2、android.support.v7.widget.RecyclerView.LayoutManager#getChildCount
	getChildCount：当前屏幕所看到的子项个数
	
	3、android.support.v7.widget.LinearLayoutManager#findFirstVisibleItemPosition
	findFirstVisibleItemPosition：返回当前RecycelrView中第一个可见的item的adapter postion
	
	4、android.support.v7.widget.LinearLayoutManager#findFirstCompletelyVisibleItemPosition
	findFirstCompletelyVisibleItemPosition：返回当前RecycelrView中第一个完整可见的item的adapter postion
	
	5、android.support.v7.widget.LinearLayoutManager#findLastVisibleItemPosition
	findLastVisibleItemPosition：返回当前RecycelrView中最后一个可见的item的adapter postion
	
	6、android.support.v7.widget.LinearLayoutManager#findLastCompletelyVisibleItemPosition
	findLastCompletelyVisibleItemPosition：返回当前RecycelrView中最后一个完整可见的item的adapter postion
	
	注：findFirstVisibleItemPosition()和findFirstCompletelyVisibleItemPosition()的差别在于：
	在RecyclerView中，第一个item_A只是露出一点点，并没有完全展示，item_B是A下方的一个item，完全展示在屏幕上，
	注：findFirstVisibleItemPosition返回的是item_A的adapter position，和findFirstCompletelyVisibleItemPosition返回item_B的adapter position

RecyclerView中（实际来自ViewGroup）
	1、android.view.ViewGroup#getChildCount
	getChildCount：获取当前可见的item view的个数，这个数字在vlayout的时候不准确，建议使用LinearLayoutManager中的方法

Adapter中
	1、android.support.v7.widget.RecyclerView.Adapter#getItemCount
	getItemCount：当前RecyclerView的所有子项个数。和LinearLayoutManager获取的值一致
	

	
判断是否到达底部：（推荐方案二和三）
https://www.jianshu.com/p/c138055af5d2
方案一：屏幕中最后一个子项lastVisibleItemPosition等于所有子项个数totalItemCount - 1，那么RecyclerView就到达了底部。
		但是，这种方法中发现了极为极端的情况，就是当totalItemCount等于1，而这个子项的高度比屏幕还要高。
	LinearLayoutManager layoutManager = (LinearLayoutManager) recyclerView.getLayoutManager();  
	//屏幕中最后一个可见子项的position
	int lastVisibleItemPosition = layoutManager.findLastVisibleItemPosition();  
	//当前屏幕所看到的子项个数
	int visibleItemCount = layoutManager.getChildCount();  
	//当前RecyclerView的所有子项个数
	int totalItemCount = layoutManager.getItemCount();  
	//RecyclerView的滑动状态
	int state = recyclerView.getScrollState();  
	if(visibleItemCount > 0 && lastVisibleItemPosition == totalItemCount - 1 && state == recyclerView.SCROLL_STATE_IDLE){   
	return true; 
	}else {   
	return false;  
	}

方案二：利用View自带的方法
	if (recyclerView.computeVerticalScrollExtent() + recyclerView.computeVerticalScrollOffset() 
		>= recyclerView.computeVerticalScrollRange())   
	return true;  
	return false;
	computeVerticalScrollExtent()是当前屏幕显示的区域高度
	computeVerticalScrollOffset() 是当前屏幕之前滑过的距离
	computeVerticalScrollRange()是整个View控件的高度
方案三：
	RecyclerView.canScrollVertically(1)的值表示是否能向上滚动，false表示已经滚动到底部
	RecyclerView.canScrollVertically(-1)的值表示是否能向下滚动，false表示已经滚动到顶部
